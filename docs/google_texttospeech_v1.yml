openapi: 3.0.0
info:
  title: Cloud Text-to-Speech API
  description: Synthesizes natural-sounding speech by applying powerful neural network models.
  contact: {}
  version: 'v1'
servers:
- url: https://texttospeech.googleapis.com/
  variables: {}
paths:
  /v1/{name}:
    delete:
      tags:
      - operations
      summary: DeleteV1ByName
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: DeleteV1ByName
      parameters:
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: The name of the operation resource to be deleted.
        required: true
        style: simple
        schema:
          pattern: ^operations/.*$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - operations
      summary: GetV1ByName
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: GetV1ByName
      parameters:
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: The name of the operation resource.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/operations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
  /v1/{name}:cancel:
    post:
      tags:
      - operations
      summary: CancelV1CancelByName
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: CancelV1CancelByName
      parameters:
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: The name of the operation resource to be cancelled.
        required: true
        style: simple
        schema:
          pattern: ^operations/.*$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
  /v1/{name}/operations:
    get:
      tags:
      - operations
      summary: ListV1OperationsByName
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: ListV1OperationsByName
      parameters:
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The standard list page size.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: name
        in: path
        description: The name of the operation's parent resource.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      - name: pageToken
        in: query
        description: The standard list page token.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: The standard list filter.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
  /v1/text:synthesize:
    post:
      tags:
      - text
      summary: SynthesizeV1TextSynthesize
      description: 'Synthesizes speech synchronously: receive results after all text input has been processed.'
      operationId: SynthesizeV1TextSynthesize
      parameters:
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeSpeechRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynthesizeSpeechResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
  /v1/voices:
    get:
      tags:
      - voices
      summary: ListV1Voices
      description: Returns a list of Voice supported for synthesis.
      operationId: ListV1Voices
      parameters:
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: languageCode
        in: query
        description: Optional. Recommended. [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. If not specified, the API will return all supported voices. If specified, the ListVoices call will only return voices that can be used to synthesize this language_code. For example, if you specify `"en-NZ"`, all `"en-NZ"` voices will be returned. If you specify `"no"`, both `"no-\*"` (Norwegian) and `"nb-\*"` (Norwegian Bokmal) voices will be returned.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVoicesResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
  /v1/{parent}:synthesizeLongAudio:
    post:
      tags:
      - locations
      summary: SynthesizeLongAudioV1SynthesizeLongAudioByParent
      description: Synthesizes long form text asynchronously.
      operationId: SynthesizeLongAudioV1SynthesizeLongAudioByParent
      parameters:
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: The resource states of the request in the form of `projects/*/locations/*/voices/*`.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeLongAudioRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
components:
  schemas:
    Operation:
      title: Operation
      type: object
      properties:
        response:
          type: object
          additionalProperties: {}
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        error:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        metadata:
          type: object
          additionalProperties: {}
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
      description: This resource represents a long-running operation that is the result of a network API call.
    SynthesizeLongAudioMetadata:
      title: SynthesizeLongAudioMetadata
      type: object
      properties:
        progressPercentage:
          type: number
          description: The progress of the most recent processing update in percentage, ie. 70.0%.
        startTime:
          type: string
          description: Time when the request was received.
      description: Metadata for response returned by the `SynthesizeLongAudio` method.
    SynthesisInput:
      title: SynthesisInput
      type: object
      properties:
        ssml:
          type: string
          description: The SSML document to be synthesized. The SSML document must be valid and well-formed. Otherwise the RPC will fail and return google.rpc.Code.INVALID_ARGUMENT. For more information, see [SSML](https://cloud.google.com/text-to-speech/docs/ssml).
        text:
          type: string
          description: The raw text to be synthesized.
      description: Contains text input to be synthesized. Either `text` or `ssml` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. The input size is limited to 5000 bytes.
    SynthesizeSpeechRequest:
      title: SynthesizeSpeechRequest
      type: object
      properties:
        audioConfig:
          allOf:
          - $ref: '#/components/schemas/AudioConfig'
          - description: Description of audio data to be synthesized.
        input:
          allOf:
          - $ref: '#/components/schemas/SynthesisInput'
          - description: Contains text input to be synthesized. Either `text` or `ssml` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. The input size is limited to 5000 bytes.
        voice:
          allOf:
          - $ref: '#/components/schemas/VoiceSelectionParams'
          - description: Description of which voice to use for a synthesis request.
      description: The top-level message sent by the client for the `SynthesizeSpeech` method.
    GoogleCloudTexttospeechV1SynthesizeLongAudioMetadata:
      title: GoogleCloudTexttospeechV1SynthesizeLongAudioMetadata
      type: object
      properties:
        startTime:
          type: string
          description: Time when the request was received.
        progressPercentage:
          type: number
          description: The progress of the most recent processing update in percentage, ie. 70.0%.
      description: Metadata for response returned by the `SynthesizeLongAudio` method.
    ListVoicesResponse:
      title: ListVoicesResponse
      type: object
      properties:
        voices:
          type: array
          items:
            $ref: '#/components/schemas/Voice'
          description: The list of voices.
      description: The message returned to the client by the `ListVoices` method.
    SynthesizeSpeechResponse:
      title: SynthesizeSpeechResponse
      type: object
      properties:
        audioContent:
          type: string
          description: 'The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.'
      description: The message returned to the client by the `SynthesizeSpeech` method.
    SynthesizeLongAudioRequest:
      title: SynthesizeLongAudioRequest
      type: object
      properties:
        input:
          allOf:
          - $ref: '#/components/schemas/SynthesisInput'
          - description: Contains text input to be synthesized. Either `text` or `ssml` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. The input size is limited to 5000 bytes.
        outputGcsUri:
          type: string
          description: 'Specifies a Cloud Storage URI for the synthesis results. Must be specified in the format: `gs://bucket_name/object_name`, and the bucket must already exist.'
        voice:
          allOf:
          - $ref: '#/components/schemas/VoiceSelectionParams'
          - description: Description of which voice to use for a synthesis request.
        audioConfig:
          allOf:
          - $ref: '#/components/schemas/AudioConfig'
          - description: Description of audio data to be synthesized.
      description: The top-level message sent by the client for the `SynthesizeLongAudio` method.
    Voice:
      title: Voice
      type: object
      properties:
        naturalSampleRateHertz:
          type: integer
          description: The natural sample rate (in hertz) for this voice.
          format: int32
        ssmlGender:
          allOf:
          - $ref: '#/components/schemas/SsmlGender1'
          - description: The gender of this voice.
        languageCodes:
          type: array
          items:
            type: string
          description: The languages that this voice supports, expressed as [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags (e.g. "en-US", "es-419", "cmn-tw").
        name:
          type: string
          description: The name of this voice. Each distinct voice has a unique name.
      description: Description of a voice supported by the TTS service.
    AudioConfig:
      title: AudioConfig
      type: object
      properties:
        sampleRateHertz:
          type: integer
          description: Optional. The synthesis sample rate (in hertz) for this audio. When this is specified in SynthesizeSpeechRequest, if this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality), unless the specified sample rate is not supported for the encoding chosen, in which case it will fail the request and return google.rpc.Code.INVALID_ARGUMENT.
          format: int32
        effectsProfileId:
          type: array
          items:
            type: string
          description: Optional. Input only. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given. See [audio profiles](https://cloud.google.com/text-to-speech/docs/audio-profiles) for current supported profile ids.
        speakingRate:
          type: number
          description: Optional. Input only. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
        pitch:
          type: number
          description: Optional. Input only. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
        volumeGainDb:
          type: number
          description: Optional. Input only. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. Strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
        audioEncoding:
          allOf:
          - $ref: '#/components/schemas/AudioEncoding'
          - description: Required. The format of the audio byte stream.
      description: Description of audio data to be synthesized.
    CustomVoiceParams:
      title: CustomVoiceParams
      type: object
      properties:
        reportedUsage:
          allOf:
          - $ref: '#/components/schemas/ReportedUsage'
          - description: Optional. The usage of the synthesized audio to be reported.
        model:
          type: string
          description: Required. The name of the AutoML model that synthesizes the custom voice.
      description: Description of the custom voice to be synthesized.
    Status:
      title: Status
      type: object
      properties:
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        details:
          type: array
          items: {}
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    VoiceSelectionParams:
      title: VoiceSelectionParams
      type: object
      properties:
        languageCode:
          type: string
          description: Required. The language (and potentially also the region) of the voice expressed as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag, e.g. "en-US". This should not include a script tag (e.g. use "cmn-cn" rather than "cmn-Hant-cn"), because the script will be inferred from the input provided in the SynthesisInput. The TTS service will use this parameter to help choose an appropriate voice. Note that the TTS service may choose a voice with a slightly different language code than the one selected; it may substitute a different region (e.g. using en-US rather than en-CA if there isn't a Canadian voice available), or even a different language, e.g. using "nb" (Norwegian Bokmal) instead of "no" (Norwegian)".
        customVoice:
          description: The configuration for a custom voice. If [CustomVoiceParams.model] is set, the service will choose the custom voice matching the specified configuration.
        name:
          type: string
          description: The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and gender.
        ssmlGender:
          allOf:
          - $ref: '#/components/schemas/SsmlGender'
          - description: The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement; if a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.
      description: Description of which voice to use for a synthesis request.
    ListOperationsResponse:
      title: ListOperationsResponse
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
    AudioEncoding:
      title: AudioEncoding
      enum:
      - AUDIO_ENCODING_UNSPECIFIED
      - LINEAR16
      - MP3
      - OGG_OPUS
      - MULAW
      - ALAW
      type: string
      description: Required. The format of the audio byte stream.
    ReportedUsage:
      title: ReportedUsage
      enum:
      - REPORTED_USAGE_UNSPECIFIED
      - REALTIME
      - OFFLINE
      type: string
      description: Optional. The usage of the synthesized audio to be reported.
    SsmlGender:
      title: SsmlGender
      enum:
      - SSML_VOICE_GENDER_UNSPECIFIED
      - MALE
      - FEMALE
      - NEUTRAL
      type: string
      description: The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement; if a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.
    SsmlGender1:
      title: SsmlGender1
      enum:
      - SSML_VOICE_GENDER_UNSPECIFIED
      - MALE
      - FEMALE
      - NEUTRAL
      type: string
      description: The gender of this voice.
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: operations
  description: ''
- name: text
  description: ''
- name: voices
  description: ''
- name: locations
  description: ''
